// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_initialize
List rcpp_initialize(std::string const& packageDirectory);
RcppExport SEXP _Fluid_rcpp_initialize(SEXP packageDirectorySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string const& >::type packageDirectory(packageDirectorySEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_initialize(packageDirectory));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_connect
List rcpp_connect(std::string const& ipAddress, int port);
RcppExport SEXP _Fluid_rcpp_connect(SEXP ipAddressSEXP, SEXP portSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string const& >::type ipAddress(ipAddressSEXP);
    Rcpp::traits::input_parameter< int >::type port(portSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_connect(ipAddress, port));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_disconnect
List rcpp_disconnect();
RcppExport SEXP _Fluid_rcpp_disconnect() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_disconnect());
    return rcpp_result_gen;
END_RCPP
}
// rcpp_submitJob
List rcpp_submitJob(const Rcpp::RawVector& environment, const Rcpp::RawVector& dataFrame);
RcppExport SEXP _Fluid_rcpp_submitJob(SEXP environmentSEXP, SEXP dataFrameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::RawVector& >::type environment(environmentSEXP);
    Rcpp::traits::input_parameter< const Rcpp::RawVector& >::type dataFrame(dataFrameSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_submitJob(environment, dataFrame));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Fluid_rcpp_initialize", (DL_FUNC) &_Fluid_rcpp_initialize, 1},
    {"_Fluid_rcpp_connect", (DL_FUNC) &_Fluid_rcpp_connect, 2},
    {"_Fluid_rcpp_disconnect", (DL_FUNC) &_Fluid_rcpp_disconnect, 0},
    {"_Fluid_rcpp_submitJob", (DL_FUNC) &_Fluid_rcpp_submitJob, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_Fluid(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
